module vga(
		input vgaclk,           //input pixel clock: how fast should this be?
		input rst,              //synchronous reset
		output hsync,			//horizontal sync out
		output vsync,			//vertical sync out
		output reg [3:0] red,	//red vga output
		output reg [3:0] green, //green vga output
		output reg [3:0] blue	//blue vga output
   );
	
	//TODO: Video protocol constants
    // You can find these described in the VGA specification for 640x480
	localparam HPIXELS = ;  // horizontal pixels per line
	localparam HPULSE = ; 	// hsync pulse length
	localparam HBP = ; 	    // end of horizontal back porch
	localparam HFP = ; 	    // beginning of horizontal front porch
	
	localparam VLINES = ;   // scanlines per frame (aka the # of vertical pixels)
	localparam VPULSE = ; 	// vsync pulse length
	localparam VBP = ; 		// end of vertical back porch
	localparam VFP = ; 	    // beginning of vertical front porch
	
	// registers for storing the horizontal & vertical counters
	reg [9:0] hc;
	reg [9:0] vc;


    //Counter block: change hc and vc correspondingly to the current state.
	always @(posedge vgaclk) begin
		 //reset condition
		if (rst == 1)
		begin
			hc <= 0;
			vc <= 0;
		end
		else
		begin
			//TODO: Implement logic to move counters properly!
			
		end
	end

	assign hsync = //TODO
	assign vsync = //TODO
	

    //RGB output block: set red, green, blue outputs here.
	always_comb begin
		// check if we're within vertical active video range
		if (/*TODO*/)
		begin
			//TODO: draw something!
			
		end
		else begin
            //TODO: we're not in active video range, what do we do?
		end
	end

endmodule
